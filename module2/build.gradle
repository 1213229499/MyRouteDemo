if (isModule) {
    //集成模式
    apply plugin: 'com.android.library'
} else {
    //组件模式
    apply plugin: 'com.android.application'
}


//rootProject是grovey语言的关键字，表示能拿到根目录下定义的所有信息
def cfg = rootProject.ext.android
def appId = rootProject.ext.appId
def v7 = rootProject.ext.dependencies

android {
    compileSdkVersion cfg.compileSdkVersion


    defaultConfig {

        if (!isModule) {
            //是组件模式，需要有appid
            applicationId appId["module2"]
        }

        //代码里面可以用BuildConfig.isModule来判断当前是否是组件模式
        buildConfigField("boolean", "isModule", String.valueOf(isModule))

        //资源配置
        sourceSets {
            main {
                if (!isModule) {
                    //组件模式,自定义AndroidManifest和java文件的路径
                    manifest.srcFile 'src/main/module/AndroidManifest.xml'
                    java.srcDirs 'src/main/module/java', 'src/main/java'
                } else {
                    //不是组件化，还原
                    manifest.srcFile 'src/main/AndroidManifest.xml'
                    java.srcDirs 'src/main/java'
                }
            }
        }
        minSdkVersion cfg.minSdkVersion
        targetSdkVersion cfg.targetSdkVersion
        versionCode cfg.versionCode
        versionName cfg.versionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [ moduleName : project.getName() ]
            }
        }

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation v7["appcompat-v7"]
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    annotationProcessor project(':router_compile')
    implementation project(':base')
}
